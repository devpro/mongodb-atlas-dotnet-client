# CI pipeline definition
# See: https://aka.ms/yaml

resources:
  pipelines:
  - pipeline: mongodbatlasdotnetclientci
    source: mongodb-atlas-dotnet-client-ci
    trigger:
      branches:
        include:
        - master

trigger: none

pr: none

variables:
# library variable groups
- group: 'build-tools'
# environment variables
- name: DOTNET_CLI_TELEMETRY_OPTOUT
  value: 1
- name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE
  value: 1
# common task variables
- name: 'BuildConfiguration'
  value: 'Release'
- name: 'SolutionFile'
  value: 'MongoDb.Atlas.Client.sln'

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core SDK 3.1.100'
  inputs:
    packageType: 'sdk'
    version: '3.1.100'
- task: DotNetCoreCLI@2
  displayName: 'Build the .NET solution'
  inputs:
    command: 'build'
    projects: $(SolutionFile)
    arguments: '-c $(BuildConfiguration)'
- task: DotNetCoreCLI@2
  displayName: 'Created packed NuGet files'
  inputs:
    command: 'pack'
    packagesToPack: '**/ConsoleApp/*.csproj;!**/*Tests.csproj'
    versioningScheme: 'off'
- task: NuGetCommand@2
  displayName: 'Push files to NuGet'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: $(nuget.instance)

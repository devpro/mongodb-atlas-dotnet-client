# Azure pipeline definition for the packaging of the solution (continuous delivery)

trigger:
  batch: true
  branches:
    include:
    - master
  paths:
    exclude:
    - README.md
    include:
    - Directory.Build.props

pr: none

variables:
# library variable groups
- group: 'build-tools'
# common task variables
- name: 'BuildConfiguration'
  value: 'Release'
- name: 'ProjectsToPackage'
  value: '**/ConsoleApp/*.csproj;!**/*Tests.csproj'
- name: 'SolutionFile'
  value: 'MongoDb.Atlas.Client.sln'
# specific variables
- name: 'dotnet.sdk.version'
  value: '3.1.100'

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: UseDotNet@2
  displayName: 'Use latest .NET Core SDK'
  inputs:
    packageType: 'sdk'
    version: $(dotnet.sdk.version)
- task: DotNetCoreCLI@2
  displayName: 'Build the .NET solution'
  inputs:
    command: 'build'
    projects: $(SolutionFile)
    arguments: '-c $(BuildConfiguration)'
  env:
    DOTNET_CLI_TELEMETRY_OPTOUT: 1
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
    COREHOST_TRACE: 0
- task: DotNetCoreCLI@2
  displayName: 'Created packed NuGet files'
  inputs:
    command: 'pack'
    packagesToPack: $(ProjectsToPackage)
    versioningScheme: 'off'
  env:
    DOTNET_CLI_TELEMETRY_OPTOUT: 1
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
    COREHOST_TRACE: 0
- task: NuGetCommand@2
  displayName: 'Push files to NuGet'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: $(nuget.instance)
